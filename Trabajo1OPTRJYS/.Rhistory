satisfaccion_vida = factor(a1_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
satisfaccion_ingresos = factor(a7_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
interes_estudios = factor(ee2_num,
levels = c(1, 2),
labels = c("Sí", "No"))
)
View(data_filtrada)
##Verificamos que se hayan recodificado correctamente
str(data_filtrada)
install.packages("knitr")
install.packages("kableExtra")
library(knitr)
library(kableExtra)
##Tabla 1 sexo
tabla_sexo <- data_filtrada %>%
count(sexo) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(Sexo = sexo, Frecuencia = n)
library(dplyr)
##Tabla 1 sexo
tabla_sexo <- data_filtrada %>%
count(sexo) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(Sexo = sexo, Frecuencia = n)
kable(tabla_sexo, format = "html", caption = "Distribución de la muestra por sexo") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "center")
##Tabla 2 Satisfacción con la vida
tabla_vida <- data_filtrada %>%
count(satisfaccion_vida) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con la vida` = satisfaccion_vida, Frecuencia = n)
kable(tabla_vida, format = "html", caption = "Distribución de satisfacción con la vida") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Tabla 3 Satisfacción con el ingreso
tabla_ingresos <- data_filtrada %>%
count(satisfaccion_ingresos) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con los ingresos` = satisfaccion_ingresos, Frecuencia = n)
kable(tabla_ingresos, format = "html", caption = "Distribución de satisfacción con los ingresos") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Tabla 4 Intereses por seguir estudiando
tabla_estudios <- data_filtrada %>%
count(interes_estudios) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Interés por estudiar` = interes_estudios, Frecuencia = n)
kable(tabla_estudios, format = "html", caption = "Distribución de interés por estudiar") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Graficamos la variable satis_vida por sexo
library(ggplot2)
##Graficamos la variable satis_vida por sexo
ggplot(data_filtrada, aes(x = satisfaccion_vida, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con la vida según sexo",
x = "Nivel de satisfacción con la vida",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
##Graficamos la variable interes por seguir estudiando por sexo
ggplot(data_filtrada, aes(x = interes_estudios, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Interés en continuar estudios en los próximos 5 años",
x = "Respuesta",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
##Graficamos la variable satis_ingreso por sexo
ggplot(data_filtrada, aes(x = satisfaccion_ingresos, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con los ingresos según sexo",
x = "Nivel de satisfacción",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
##Instalamos y cargamos los paquetes necesarios
options(repos = c(CRAN = "https://cloud.r-project.org"))
source("C:/Users/Sebastián Fernández/OneDrive/Desktop/OPT R, TRABAJOS/ejercicios-practicos-RADSF/Trabajo1OPTRJYS/PROC/PREPARACION.R")
##Instalamos y cargamos los paquetes necesarios
load("Base de datos EBS 2023.RData")
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(forcats)
library(dplyr)
library(haven)
library(knitr)
library(kableExtra)
library(ggplot2)
pacman::p_load(haven,tidyverse,sjlabelled, dplyr, stargazer,sjmisc,summarytools, kableExtra,sjPlot, corrplot, ggplot2)
##Cargamos y renombramos la base de datos
load("Base de datos EBS 2023.RData")
data <- EBS_2023_vp
##Visualizamos la base de datos
View(data)
##Filtramos la base de datos con las variables que utilizaremos
data_filtrada <- data %>%
select(sg01, a1, a7, ee2)
View(data_filtrada)
##Pasamos las variables a numericas para posteriormente recodificarlas
data_filtrada$sg01_num <- as.numeric(zap_labels(data_filtrada$sg01))
data_filtrada$a1_num   <- as.numeric(zap_labels(data_filtrada$a1))
data_filtrada$a7_num   <- as.numeric(zap_labels(data_filtrada$a7))
data_filtrada$ee2_num  <- as.numeric(zap_labels(data_filtrada$ee2))
##Recodificamos las variables
data_filtrada <- data_filtrada %>%
mutate(
sexo = factor(sg01_num, levels = c(1, 2), labels = c("Hombre", "Mujer")),
satisfaccion_vida = factor(a1_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
satisfaccion_ingresos = factor(a7_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
interes_estudios = factor(ee2_num,
levels = c(1, 2),
labels = c("Sí", "No"))
)
##Verificamos que se hayan recodificado correctamente
str(data_filtrada)
##Cargamos y renombramos la base de datos
load("Base de datos EBS 2023.RData")
data <- EBS_2023_vp
##Filtramos la base de datos con las variables que utilizaremos
data_filtrada <- data %>%
select(sg01, a1, a7, ee2)
library(labelled)
install.packages("labelled")
library(labelled)
##Pasamos las variables a numericas para posteriormente recodificarlas
data_filtrada <- data_filtrada %>%
mutate(
sg01_num = as_numeric(sg01),
a1_num   = as_numeric(a1),
a7_num   = as_numeric(a7),
ee2_num  = as_numeric(ee2)
)
##Filtramos antes de recodificar
data_filtrada <- data_filtrada %>%
filter(
sg01_num %in% c(1, 2),
a1_num %in% 1:5,
a7_num %in% 1:5,
ee2_num %in% c(1, 2)
)
##Recodificamos las variables
data_filtrada <- data_filtrada %>%
mutate(
sexo = factor(sg01_num, levels = c(1, 2), labels = c("Hombre", "Mujer")),
satisfaccion_vida = factor(a1_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
satisfaccion_ingresos = factor(a7_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho", "Indiferente", "Satisfecho", "Muy satisfecho")),
interes_estudios = factor(ee2_num,
levels = c(1, 2),
labels = c("Sí", "No"))
)
##Verificamos que se hayan recodificado correctamente
str(data_filtrada)
##Tabla 1 sexo
tabla_sexo <- data_filtrada %>%
count(sexo) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(Sexo = sexo, Frecuencia = n)
kable(tabla_sexo, format = "html", caption = "Distribución de la muestra por sexo") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "center")
##Tabla 2 Satisfacción con la vida
tabla_vida <- data_filtrada %>%
count(satisfaccion_vida) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con la vida` = satisfaccion_vida, Frecuencia = n)
kable(tabla_vida, format = "html", caption = "Distribución de satisfacción con la vida") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
#Tabla 3 Satisfacción con el ingreso
tabla_ingresos <- data_filtrada %>%
count(satisfaccion_ingresos) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con los ingresos` = satisfaccion_ingresos, Frecuencia = n)
kable(tabla_ingresos, format = "html", caption = "Distribución de satisfacción con los ingresos") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Tabla 4 Intereses por seguir estudiando
tabla_estudios <- data_filtrada %>%
count(interes_estudios) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Interés por estudiar` = interes_estudios, Frecuencia = n)
kable(tabla_estudios, format = "html", caption = "Distribución de interés por estudiar") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Graficamos la variable satis_vida por sexo
ggplot(data_filtrada, aes(x = satisfaccion_vida, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con la vida según sexo",
x = "Nivel de satisfacción con la vida",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
##Graficamos la variable interes por seguir estudiando por sexo
ggplot(data_filtrada, aes(x = interes_estudios, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Interés en continuar estudios en los próximos 5 años",
x = "Respuesta",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
##Graficamos la variable satis_ingreso por sexo
ggplot(data_filtrada, aes(x = satisfaccion_ingresos, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con los ingresos según sexo",
x = "Nivel de satisfacción",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
###Análisis de correlación entre satisfacción de vida, ingreso e
###interes por seguir estudiando
# Seleccionamos las variables relacionadas con la satisfacción para la correlación
satis_cor <- data_filtrada %>%
select(a1_num, a7_num, ee2_num)
# Matriz de correlación entre satisfacción con la vida, ingresos e interés por estudiar
cor_matrix <- cor(satis_cor, use = "complete.obs", method = "pearson")
print(round(cor_matrix, 2))
library(corrplot)
# Visualización de la matriz de correlación
corrplot(cor_matrix, method = "circle", type = "upper", tl.cex = 1, tl.col = "black")
install.packages("ggcorrplot")
library(ggcorrplot)
# Correlación con ggcorrplot
ggcorrplot(cor_matrix,
lab = TRUE,
lab_size = 4,
type = "lower",
colors = c("red", "white", "blue"),
title = "Correlación entre variables de satisfacción",
ggtheme = theme_minimal())
# Primero calculas la matriz como siempre
cor_matrix <- cor(satis_cor, use = "complete.obs", method = "pearson")
# Renombrar las filas y columnas para que sean más entendibles
colnames(cor_matrix) <- c("Satis_Vida", "Satis_Ingresos", "Interés_Estudiar")
rownames(cor_matrix) <- c("Satis_Vida", "Satis_Ingresos", "Interés_Estudiar")
##Gráficamos
ggcorrplot(cor_matrix,
lab = TRUE,
lab_size = 4,
type = "lower",
colors = c("red", "white", "blue"),
title = "Correlación entre Variables de Satisfacción",
ggtheme = theme_minimal())
##Gráficamos
ggcorrplot(cor_matrix,
lab = TRUE,
lab_size = 4,
type = "lower",
colors = c("red", "white", "blue"),
title = "Matriz de Correlación entre Variables de Satisfacción",
ggtheme = theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)))
##Indice sumativo entre satisfacción con la vida e ingresos
data_filtrada <- data_filtrada %>%
mutate(indice_satisfaccion = a1_num + a7_num)
# Resumen descriptivo del índice
summary(data_filtrada$indice_satisfaccion)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
labs(title = "Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia") +
theme_minimal(base_size = 12)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Distribución del Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Distribución del Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.2, face = "bold"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Distribución del Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.1, face = "bold"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Distribución del Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.0, face = "bold"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Distribución del Índice de Satisfacción Subjetiva",
x = "Índice de Satisfacción (satis_vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
# Visualización: histograma del índice
ggplot(data_filtrada, aes(x = indice_satisfaccion)) +
geom_histogram(binwidth = 1, fill = "dodgerblue", color = "black", boundary = 0) +
scale_x_continuous(breaks = seq(2, 10, by = 1)) +
labs(
title = "Índice de satisfacción subjetiva",
x = "Índice de satisfacción (vida + ingresos)",
y = "Frecuencia"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5, size = 13),  # <- más pequeño y centrado
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10))
)
nzhxhjj
##Instalamos y cargamos los paquetes necesarios
load("Base de datos EBS 2023.RData")
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(ggcorrplot)
library(forcats)
library(dplyr)
library(haven)
library(knitr)
library(kableExtra)
library(ggplot2)
library(labelled)
library(corrplot)
pacman::p_load(haven,tidyverse,sjlabelled, dplyr, stargazer,sjmisc,summarytools, kableExtra,sjPlot, corrplot, ggplot2)
##Cargamos y renombramos la base de datos
load("Base de datos EBS 2023.RData")
data <- EBS_2023_vp
##Visualizamos la base de datos
View(data)
##Filtramos la base de datos con las variables que utilizaremos
data_filtrada <- data %>%
select(sg01, a1, a7, ee2)
View(data_filtrada)
##Pasamos las variables a numericas para posteriormente recodificarlas
data_filtrada <- data_filtrada %>%
mutate(
sg01_num = as_numeric(sg01),
a1_num   = as_numeric(a1),
a7_num   = as_numeric(a7),
ee2_num  = as_numeric(ee2)
)
##Recodificamos las variables
data_filtrada <- data_filtrada %>%
mutate(
sexo = factor(sg01_num, levels = c(1, 2), labels = c("Hombre", "Mujer")),
satisfaccion_vida = factor(a1_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho",
"Indiferente", "Satisfecho",
"Muy satisfecho")),
satisfaccion_ingresos = factor(a7_num,
levels = 1:5,
labels = c("Muy insatisfecho", "Insatisfecho"
,
"Indiferente", "Satisfecho",
"Muy satisfecho")),
interes_estudios = factor(ee2_num,
levels = c(1, 2),
labels = c("Sí", "No"))
)
##Verificamos que se hayan recodificado correctamente
str(data_filtrada)
##Tabla 1 sexo
tabla_sexo <- data_filtrada %>%
count(sexo) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(Sexo = sexo, Frecuencia = n)
kable(tabla_sexo, format = "html", caption = "Distribución de la muestra por sexo") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "center")
##Tabla 2 Satisfacción con la vida
tabla_vida <- data_filtrada %>%
count(satisfaccion_vida) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con la vida` = satisfaccion_vida, Frecuencia = n)
kable(tabla_vida, format = "html", caption = "Distribución de satisfacción con la vida") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
#Tabla 3 Satisfacción con el ingreso
tabla_ingresos <- data_filtrada %>%
count(satisfaccion_ingresos) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Satisfacción con los ingresos` = satisfaccion_ingresos, Frecuencia = n)
kable(tabla_ingresos, format = "html", caption = "Distribución de satisfacción con los ingresos") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Tabla 4 Intereses por seguir estudiando
tabla_estudios <- data_filtrada %>%
count(interes_estudios) %>%
mutate(Porcentaje = round(n / sum(n) * 100, 1)) %>%
rename(`Interés por estudiar` = interes_estudios, Frecuencia = n)
kable(tabla_estudios, format = "html", caption = "Distribución de interés por estudiar") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width = F, position = "center")
##Graficamos la variable satis_vida por sexo
ggplot(data_filtrada, aes(x = satisfaccion_vida, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con la vida según sexo",
x = "Nivel de satisfacción con la vida",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
##Graficamos la variable interes por seguir estudiando por sexo
ggplot(data_filtrada, aes(x = interes_estudios, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Interés en continuar estudios en los próximos 5 años",
x = "Respuesta",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5))
##Graficamos la variable satis_ingreso por sexo
ggplot(data_filtrada, aes(x = satisfaccion_ingresos, fill = sexo)) +
geom_bar(position = "dodge") +
labs(title = "Satisfacción con los ingresos según sexo",
x = "Nivel de satisfacción",
y = "Frecuencia",
fill = "Sexo") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 20, hjust = 1))
###Análisis de correlación entre satisfacción de vida, ingreso e
###interes por seguir estudiando
# Seleccionamos las variables para la correlación
satis_cor <- data_filtrada %>%
select(a1_num, a7_num, ee2_num)
#Calculamos la matriz
cor_matrix <- cor(satis_cor, use = "complete.obs", method = "pearson")
# Renombrar las filas y columnas para que tengan nombres más claros
colnames(cor_matrix) <- c("Satis_Vida", "Satis_Ingresos", "Interés_Estudiar")
rownames(cor_matrix) <- c("Satis_Vida", "Satis_Ingresos", "Interés_Estudiar")
##Gráficamos
ggcorrplot(cor_matrix,
lab = TRUE,
lab_size = 4,
type = "lower",
colors = c("red", "white", "blue"),
title = "Matriz de Correlación entre Variables de Satisfacción",
ggtheme = theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)))
install.packages("psych")
library(psych)
##Escala y reporte de Alpha de Cronbach
###entre satisfacción con la vida e ingresos
#Creamos la escala
escala_bienestar_satis <- data_filtrada %>%
select(a1_num, a7_num)
# Calcular alfa de Cronbach
alpha(escala_bienestar_satis)
View(data)
